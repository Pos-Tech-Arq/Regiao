version: "3"
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        version: 1
    image: regiao-api-metrics
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Server="mssql-server"
      - Database=RegioesDb
      - Password="SenhaForte#369"
    networks:
      - regiao-service-network
    depends_on:
      rabbitmq:
        condition: service_started
      sqlserver:
        condition: service_healthy

  sqlserver:
    build:
      context: ./sqlserver
      dockerfile: Dockerfile
      args:
        version: 1
    image: sqlserver-local
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=SenhaForte#369
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    expose:
      - "1433"
    networks:
      - regiao-service-network
    volumes:
      - './sqlserver/data:/var/opt/mssql/data/RegioesDb'
    healthcheck:
      test: [ "CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -U sa -P 'SenhaForte#369' -Q 'SELECT 1'" ]
      interval: 10s
      timeout: 5s
      retries: 3
  
  prometheus:
    build: 
        context: ./prometheus
        dockerfile: Dockerfile
        args:
          version: 1
    image: prometheus-local
    restart: always
    ports:
      - "9090:9090"
    networks:
        - regiao-service-network
    volumes:
      - './prometheus/data:/data'
        
  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile
      args:
          version: 1
    image: grafana-local
    restart: always
    ports:
      - "3000:3000"
    networks:
        - regiao-service-network
  
  rabbitmq:
    image: rabbitmq:management
    hostname: "rabbitmq"
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - regiao-service-network
  
   
networks:
  regiao-service-network:
    driver: bridge
